<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2.0">
  <zoom_level>6</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>546</x>
      <y>24</y>
      <w>222</w>
      <h>54</h>
    </coordinates>
    <panel_attributes>GameFactory
--
+&lt;static&gt;getInstance(): GameFactory
+createGame(String gameInfo): GameController
--
/stworzenie całej gry na podstawie GameInfo/
bg=light_gray</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>840</x>
      <y>0</y>
      <w>150</w>
      <h>66</h>
    </coordinates>
    <panel_attributes>JapanGameModel
--
+calculateScore(): float
+getPossibleTerritory(): Field[][] 
--
/wewnątrz jeszcze wiele/
/prywatnych metod /

bg=light_gray</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>954</x>
      <y>60</y>
      <w>18</w>
      <h>204</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
bg=light_gray</panel_attributes>
    <additional_attributes>10.0;320.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1200</x>
      <y>294</y>
      <w>198</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
/GameState/
--
+makeMovement(GameModel model): GameState
+pass(GameModel model): GameState 
+initialiseGame(GameModel model): GameState 
+resign(GameModel model): GameState 
+GameStateEnum getState();

fg=black
bg=light_gray</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1224</x>
      <y>372</y>
      <w>18</w>
      <h>54</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.
bg=light_gray</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1458</x>
      <y>366</y>
      <w>18</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.
bg=light_gray</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>672</x>
      <y>288</y>
      <w>210</w>
      <h>174</h>
    </coordinates>
    <panel_attributes>GameController
--
-gameModel: GameModel
--
+getPossibleMovements(Field colour): boolean[][] 
+addMovement(int x, int y, Field playerField): boolean 
+isTurnPossible(int x, int y, Field playerField): boolean 
+calculateScore(): float 
+getPossibleTerritory(): Field[][] 
+getState(): GameStateEnum 
+getBoardCopy(): Field[][] 
+getKomi(): float 
+initialiseGame(): void 
+pass(): void 
+resign(): void 
--
/Interfejs do warstwy logiki gry/
bg=light_gray</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>624</x>
      <y>402</y>
      <w>60</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
bg=white
m1=1
m2=1</panel_attributes>
    <additional_attributes>80.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1140</x>
      <y>330</y>
      <w>72</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
bg=light_gray
m1=1
m2=1</panel_attributes>
    <additional_attributes>100.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1194</x>
      <y>414</y>
      <w>84</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>Beginning
--


bg=light_gray</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1410</x>
      <y>414</y>
      <w>84</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>BlackTurn


bg=light_gray</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1506</x>
      <y>414</y>
      <w>84</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>WhiteTurn


bg=light_gray</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1002</x>
      <y>42</y>
      <w>270</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>GameBoard
--
-board: Field[][] 
-boardTeritories: Field[][] 
-size: int
-xKO, yKO: int 
-chain: boolean[][] 
--
GameBoard(int size)
+getSize(): int
+move(int x, int y): boolean
+getPossibleMovements(Field playerField): boolean[][]
-isChainKilled(Field playerField, Field concurField, int i, int j): boolean
+getBoardCopy(): Field[][]
--

bg=light_gray</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>102</x>
      <y>42</y>
      <w>456</w>
      <h>210</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=1
m2=1</panel_attributes>
    <additional_attributes>740.0;10.0;10.0;10.0;10.0;330.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>762</x>
      <y>24</y>
      <w>90</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
bg=light_gray
m2=1
m1=1</panel_attributes>
    <additional_attributes>130.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1428</x>
      <y>318</y>
      <w>192</w>
      <h>54</h>
    </coordinates>
    <panel_attributes>PlayerTurn
--
+initialiseGame(GameModel model): GameState 
bg=light_gray</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1524</x>
      <y>366</y>
      <w>18</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.
bg=light_gray</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>906</x>
      <y>252</y>
      <w>240</w>
      <h>174</h>
    </coordinates>
    <panel_attributes>&lt;&lt;abstract&gt;&gt;
GameModel
--
-board: GameBoard
-possibleMovementsWhite: boolean[][] 
-possibleMovementsBlack: boolean[][]  
-state: GameState 
-komi: float
--
+getPossibleMovements(String colour): boolean[][]
+addMovement(String move): String 
+&lt;abstract&gt; calculateScore(): float
+&lt;abstract&gt; getPossibleTerritory(): Field[][] 
+isTurnPossible(int x, int y): boolean 
+getState(): GameStateEnum

--
/Klasa przedstawiająca model całej gry/


fg=black
bg=light_gray</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>876</x>
      <y>342</y>
      <w>42</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
bg=light_gray
m1=1
m2=1</panel_attributes>
    <additional_attributes>50.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1032</x>
      <y>180</y>
      <w>18</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
bg=light_gray
m1=1
m2=1</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;120.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1326</x>
      <y>90</y>
      <w>114</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>&lt;&lt;enum&gt;&gt;
Field
--
WHITE_STONE
BLACK_STONE
WHITE_TERRITORY
BLACK_TERRITORY
WALL
EMPTY
NONETERRITORY
DEADWHITE
DEADBLACK




fg=black
bg=light_gray</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>684</x>
      <y>498</y>
      <w>192</w>
      <h>102</h>
    </coordinates>
    <panel_attributes>BotGameController
--
+move(x: int, y: int)
+pass(String colour)
+resign(StringColour)
+acceptTerritory(StringColour)
--
/Implementacja Bota/
bg=light_gray</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>774</x>
      <y>456</y>
      <w>18</w>
      <h>54</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
bg=light_gray</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1266</x>
      <y>96</y>
      <w>72</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m2=1
m1=size^2

bg=light_gray</panel_attributes>
    <additional_attributes>100.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1392</x>
      <y>330</y>
      <w>48</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.
bg=light_gray</panel_attributes>
    <additional_attributes>10.0;10.0;60.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>726</x>
      <y>72</y>
      <w>18</w>
      <h>228</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
bg=light_gray
m1=1
m2=1</panel_attributes>
    <additional_attributes>10.0;360.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>792</x>
      <y>24</y>
      <w>18</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=1</panel_attributes>
    <additional_attributes>10.0;140.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>786</x>
      <y>108</y>
      <w>150</w>
      <h>54</h>
    </coordinates>
    <panel_attributes>ChineseGameModel
--
+calculateScore(): float
+getPossibleTerritory(): Field[][] 
--
/nie zaimplementowane w projekcie/

bg=light_gray</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>918</x>
      <y>156</y>
      <w>18</w>
      <h>108</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
bg=light_gray</panel_attributes>
    <additional_attributes>10.0;160.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1332</x>
      <y>372</y>
      <w>18</w>
      <h>54</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.
bg=light_gray</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1302</x>
      <y>414</y>
      <w>84</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>End
--


bg=light_gray</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>492</x>
      <y>222</y>
      <w>60</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>UntypedActor</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>516</x>
      <y>234</y>
      <w>18</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>144</x>
      <y>396</y>
      <w>18</w>
      <h>216</h>
    </coordinates>
    <panel_attributes>lt=&lt;.&gt;</panel_attributes>
    <additional_attributes>10.0;340.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>426</x>
      <y>600</y>
      <w>60</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>UntypedActor</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>450</x>
      <y>612</y>
      <w>18</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>156</x>
      <y>174</y>
      <w>60</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>UntypedActor</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>180</x>
      <y>186</y>
      <w>18</w>
      <h>66</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>528</x>
      <y>540</y>
      <w>18</w>
      <h>132</h>
    </coordinates>
    <panel_attributes>lt=&lt;-&gt;</panel_attributes>
    <additional_attributes>10.0;200.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>234</x>
      <y>540</y>
      <w>60</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>UntypedActor</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>258</x>
      <y>552</y>
      <w>18</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>72</x>
      <y>600</y>
      <w>228</w>
      <h>282</h>
    </coordinates>
    <panel_attributes>models::Player
--
-name: String
-in: WebSocket.In&lt;JsonNode&gt;
-out: WebSocket.Out&lt;JsonNode&gt;
-playerRoom: ActorRef
-state: Player.State
-invitation: Invite
-currentGame: ActorRef
-gameInfo: String
--
+Player(final String name, WebSocket.In&lt;JsonNode&gt; in,
final WebSocket.Out&lt;JsonNode&gt; out,
final ActorRef playerRoom): ctor
+onReceive(Object message): void
-onGameEnded(GameEnded message): void
-onResumeGame(ResumeGame message): void
-onPass(Pass message): void
-onMove(Move message): void
-onSendBoard(SendBoard message): void
-onInvitation(Invite message): void
-onInvitationResponse(RespondToInvitation message): void
-onConfirmInvitation(ConfirmInvitation message): void
-onCancelInvitation(CancelInvitation message): void
-onQuit(Quit message): void
-onRefreshBoard(RefreshBoard message): void
-onCancelWaiting(CancelWaiting message): void
-onWaitForGame(WaitForGame message): void
-onAcceptTerritory(AcceptTerritory message): void
-onPlayBotGame(PlayBotGame message): void
-onResign(Resign message): void
-onCreateGame(CreateGame message): void

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>420</x>
      <y>282</y>
      <w>210</w>
      <h>264</h>
    </coordinates>
    <panel_attributes>models::Game
--
-currentBoard: Field[][]
#controller: GameController
#territoryBoard: Field[][]
#acceptedPreviousTurn: boolean
#territoryPhase: boolean
#blackPlayer, whitePlayer, currentPlayer: ActorRef
-lastMove: String
--
~Game(ActorRef blackPlayer, ActorRef whitePlayer,
GameController controller): ctor
#initializeGame(ActorRef player): void
#getOpponent(ActorRef player): ActorRef
#resign(): void
#pass(ActorRef player): void
#changeTerritory(int x, int y): void
#refreshTerritory(): void
+onReceive(Object message): void
-onQuit(Quit message): void
#onResumeGame(ResumeGame message): void
-onRefreshBoard(RefreshBoard message): void
-generateStatistics(): String
-getWinner(): String
#onAcceptTerritory(AcceptTerritory message): void
#onResign(Resign message): void
#onPass(Pass message): void
-onMove(Move message): void

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>240</y>
      <w>312</w>
      <h>162</h>
    </coordinates>
    <panel_attributes>models::PlayerRoom
--
-playerRoom = Akka.system().actorOf(Props.create(PlayerRoom.class)): ActorRef
-players = new HashMap(): Map&lt;String, ActorRef&gt;
-waitingplayers = new HashMap(): Map&lt;String, WaitingPlayer&gt;
--
+tryJoin(final String playerName, WebSocket.In&lt;JsonNode&gt; in,
WebSocket.Out&lt;JsonNode&gt; out): boolean
+tryGetPlayer(final String playerName): ActorRef
+cancelWaiting(final CancelWaiting message): boolean
+onReceive(Object message): void
-onJoin(Object message): void
-onQuit(Object message): void
-onGetPlayer(GetPlayer message): void
-onWaitForGame(WaitForGame message): void
-onCancelWaiting(CancelWaiting message): void
-onPlayBotGame(PlayBotGame message): void

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>432</x>
      <y>660</y>
      <w>126</w>
      <h>54</h>
    </coordinates>
    <panel_attributes>models::BotPlayer
--
--
+BotPlayer(): ctor
+onReceive(Object arg0): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
